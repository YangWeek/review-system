syntax = "proto3";

package api.operation.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "review-o/api/operation/v1;v1";
option java_multiple_files = true;
option java_package = "api.operation.v1";


// o端的protobuf 文件
service Operation {
  // 审计评价
  rpc AuditReview (AuditReviewRequest) returns (AuditReviewReply) {
    option (google.api.http) = {
      post: "o/v1/review/audit",
      body: "*"
    };
  }
  // 审计回复
  rpc AuditAppeal (AuditAppealRequest) returns (AuditAppealReply) {
    option (google.api.http) = {
      post: "o/v1/appeal/audit",
      body: "*"
    };
  }
}

// 审计请求
message AuditReviewRequest {
  int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}];
  int32 status = 2 [(validate.rules).int32 = {gt: 0}];
  string opUser = 3 [(validate.rules).string = {min_len: 2}];
  string opReason = 4 [(validate.rules).string = {min_len: 2}];
  optional string opRemarks = 5;
}

// 审计回复
message AuditReviewReply {}


// 审计上诉请求
message AuditAppealRequest{
  int64 appealID = 1 [(validate.rules).int64 = {gt: 0}];
  int64 reviewID = 2 [(validate.rules).int64 = {gt: 0}];
  int32 status = 3 [(validate.rules).int32 = {gt: 0}];
  string opUser =4 [(validate.rules).string = {min_len: 2}];
  string opReason = 5 [(validate.rules).string = {min_len: 2}];
  optional string opRemarks = 6;
}
// 对申诉进行审核的返回值
message AuditAppealReply{
}